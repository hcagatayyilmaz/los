// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  firstName    String
  lastName     String
  profileImage String?
  points       Int           @default(0)
  checkIns     CheckIn[]
  transactions Transaction[]
}

enum AttractionType {
  PLACE
  EVENT
  POINT
}

model Attraction {
  id        String         @id @default(cuid())
  type      AttractionType
  name      String
  latitude  Float
  longitude Float
  points    Int
  cityId    String
  city      City           @relation(fields: [cityId], references: [id])
  checkIns  CheckIn[]
}

model CheckIn {
  id           String     @id @default(cuid())
  userId       String
  attractionId String
  user         User       @relation(fields: [userId], references: [id])
  attraction   Attraction @relation(fields: [attractionId], references: [id])
  createdAt    DateTime   @default(now())
}

model City {
  id          String       @id @default(cuid())
  name        String       @unique
  slug        String       @unique
  info        Json?
  attractions Attraction[]
}

model Reward {
  id           String        @id @default(cuid())
  name         String
  points       Int
  description  Json
  available    Boolean       @default(true)
  transactions Transaction[]
  endAt        DateTime?
}

model Transaction {
  id        String   @id @default(cuid())
  userId    String
  rewardId  String
  user      User     @relation(fields: [userId], references: [id])
  reward    Reward   @relation(fields: [rewardId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, rewardId])
}
